name: Checks

on:
  pull_request: # push is handled in the deploy workflows
    branches: ["**"]
  workflow_call:

concurrency:
  # Skip concurrency restriction when called from another workflow
  # This prevents deadlocks between parent workflow and this one
  group:
    ${{ github.workflow_ref != '' && format('{0}-{1}', github.workflow,
    github.run_id) || format('{0}-{1}', github.workflow, github.ref) }}
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command: [lint, check-types, check-format, test, check-circular]

    name: ${{ matrix.command }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 22

      - name: Enable corepack
        run: corepack enable pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          # First tries exact match with lock file hash. If not found,
          # falls back to any cache starting with 'pnpm-store-'.
          # This way we get exact cache on repeated runs, but can still
          # use older cache as starting point when dependencies change.
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ${{ matrix.command }}
        run: pnpm ${{ matrix.command }}
